exports[`App componenet renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      },
      undefined,
    ]
  }>
  <View
    style={
      Object {
        "flex": 1,
      }
    }>
    <View
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      pointerEvents="auto"
      style={
        Object {
          "backgroundColor": "white",
          "bottom": 0,
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateX": 0,
            },
            Object {
              "translateY": 0,
            },
          ],
        }
      }>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            undefined,
          ]
        }>
        <View
          style={
            Object {
              "flex": 1,
            }
          }>
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "backgroundColor": "white",
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }>
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  undefined,
                ]
              }>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "grey",
                    "borderColor": "blue",
                    "borderWidth": 1,
                    "flex": 1,
                    "paddingTop": 133.4,
                  }
                }>
                <Image
                  source={1}
                  style={
                    Object {
                      "borderColor": "red",
                      "borderWidth": 1,
                      "height": 225,
                      "marginBottom": 20,
                      "width": 225,
                    }
                  } />
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "green",
                      "borderWidth": 1,
                      "height": 533.6,
                      "justifyContent": "space-around",
                      "width": 600,
                    }
                  }>
                  <RCTFBLoginButton
                    onChange={[Function]}
                    onLoginFinished={[Function]}
                    onLogoutFinished={[Function]}
                    readPermissions={
                      Array [
                        "email",
                      ]
                    }
                    style={
                      Object {
                        "height": 30,
                        "width": 180,
                      }
                    } />
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "height": 40,
                      }
                    }>
                    <TextInput
                      autoCapitalize="none"
                      autoCorrect={false}
                      onChangeText={[Function]}
                      placeholder="Email"
                      secureTextEntry={undefined}
                      style={
                        Object {
                          "backgroundColor": "white",
                          "color": "#000",
                          "flex": 1,
                          "fontSize": 18,
                          "lineHeight": 15,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                        }
                      }
                      value={undefined} />
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderWidth": 1,
                        "flexDirection": "row",
                        "height": 40,
                      }
                    }>
                    <TextInput
                      autoCapitalize="none"
                      autoCorrect={false}
                      onChangeText={[Function]}
                      placeholder="password"
                      secureTextEntry={true}
                      style={
                        Object {
                          "backgroundColor": "white",
                          "color": "#000",
                          "flex": 1,
                          "fontSize": 18,
                          "lineHeight": 15,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                        }
                      }
                      value={undefined} />
                  </View>
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignSelf": "stretch",
                        "backgroundColor": "red",
                        "borderColor": "black",
                        "borderWidth": 1,
                        "opacity": 1,
                      }
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}>
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "alignSelf": "center",
                            "borderColor": "green",
                            "borderWidth": 1,
                            "color": "white",
                            "fontSize": 18,
                            "fontWeight": "600",
                            "paddingBottom": 5,
                            "paddingTop": 5,
                          },
                          undefined,
                        ]
                      }>
                      Login
                    </Text>
                  </View>
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignSelf": "stretch",
                        "backgroundColor": "blue",
                        "borderColor": "black",
                        "borderWidth": 1,
                        "opacity": 1,
                      }
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}>
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "alignSelf": "center",
                            "borderColor": "green",
                            "borderWidth": 1,
                            "color": "white",
                            "fontSize": 18,
                            "fontWeight": "600",
                            "paddingBottom": 5,
                            "paddingTop": 5,
                          },
                          undefined,
                        ]
                      }>
                      Create Account
                    </Text>
                  </View>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "borderColor": "red",
                        "borderWidth": 1,
                        "color": "red",
                        "fontSize": 20,
                      }
                    }>
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
